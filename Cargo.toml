[workspace.package]
version = "0.0.1"
edition = "2021"
rust-version = "1.79"
license = "MIT OR Apache-2.0"
homepage = "https://github.com/astranetworld/rast"
repository = "https://github.com/astranetworld/rast"
exclude = [".github/"]



[workspace]
members = [
    "bin/rast/",
    "crates/primitives/",
    "crates/primitives-traits/"
]
default-members = ["bin/rast"]


# Explicitly set the resolver to version 2, which is the default for packages with edition >= 2021
# https://doc.rust-lang.org/edition-guide/rust-2021/default-cargo-resolver.html
resolver = "2"

[workspace.lints]
rust.missing_debug_implementations = "warn"
rust.missing_docs = "warn"
rust.unreachable_pub = "warn"
rust.unused_must_use = "deny"
rust.rust_2018_idioms = { level = "deny", priority = -1 }
rustdoc.all = "warn"
# rust.unnameable-types = "warn"

[workspace.lints.clippy]
# These are some of clippy's nursery (i.e., experimental) lints that we like.
# By default, nursery lints are allowed. Some of the lints below have made good
# suggestions which we fixed. The others didn't have any findings, so we can
# assume they don't have that many false positives. Let's enable them to
# prevent future problems.
branches_sharing_code = "warn"
clear_with_drain = "warn"
derive_partial_eq_without_eq = "warn"
empty_line_after_outer_attr = "warn"
equatable_if_let = "warn"
imprecise_flops = "warn"
iter_on_empty_collections = "warn"
iter_with_drain = "warn"
large_stack_frames = "warn"
manual_clamp = "warn"
mutex_integer = "warn"
needless_pass_by_ref_mut = "warn"
nonstandard_macro_braces = "warn"
or_fun_call = "warn"
path_buf_push_overwrite = "warn"
read_zero_byte_vec = "warn"
redundant_clone = "warn"
suboptimal_flops = "warn"
suspicious_operation_groupings = "warn"
trailing_empty_array = "warn"
trait_duplication_in_bounds = "warn"
transmute_undefined_repr = "warn"
trivial_regex = "warn"
tuple_array_conversions = "warn"
uninhabited_references = "warn"
unused_peekable = "warn"
unused_rounding = "warn"
useless_let_if_seq = "warn"
use_self = "warn"
missing_const_for_fn = "warn"
empty_line_after_doc_comments = "warn"
iter_on_single_items = "warn"
match_same_arms = "warn"
doc_markdown = "warn"
unnecessary_struct_initialization = "warn"
string_lit_as_bytes = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
type_repetition_in_bounds = "warn"
flat_map_option = "warn"
manual_assert = "warn"
manual_string_new = "warn"
naive_bytecount = "warn"
needless_bitwise_bool = "warn"
zero_sized_map_values = "warn"
single_char_pattern = "warn"
needless_continue = "warn"
enum_glob_use = "warn"
iter_without_into_iter = "warn"

# These are nursery lints which have findings. Allow them for now. Some are not
# quite mature enough for use in our codebase and some we don't really want.
# Explicitly listing should make it easier to fix in the future.
as_ptr_cast_mut = "allow"
cognitive_complexity = "allow"
collection_is_never_read = "allow"
debug_assert_with_mut_call = "allow"
fallible_impl_from = "allow"
future_not_send = "allow"
needless_collect = "allow"
non_send_fields_in_send_ty = "allow"
redundant_pub_crate = "allow"
significant_drop_in_scrutinee = "allow"
significant_drop_tightening = "allow"

# Speed up tests.
[profile.dev.package]
proptest.opt-level = 3
rand_xorshift.opt-level = 3
rand_chacha.opt-level = 3
unarray.opt-level = 3

[patch.crates-io]
reth-primitives = { path = "crates/primitives" }
reth-primitives-traits = { path = "crates/primitives-traits" }
alloy-genesis = { path = "crates/alloy-genesis" }

[workspace.dependencies]
reth-primitives = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" ,default-features = false, features = ["std"] }
reth-primitives-traits = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" ,default-features = false }

reth-discv4 = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-discv5 = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }

reth-chainspec = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-config = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-fs-util = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-db = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3", features = ["mdbx"] }
reth-libmdbx = {  git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3", features = ["return-borrowed", "read-tx-timeouts"] }
reth-db-api = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-exex = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-provider = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-evm = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-revm = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-stages = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-execution-types = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-errors = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-transaction-pool = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-beacon-consensus = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-cli-runner = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-cli-commands = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-cli-util = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-codecs = {git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-codecs-derive = {git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3"  }
reth-consensus-common = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-blockchain-tree = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-rpc-builder = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-rpc = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-rpc-types = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-rpc-types-compat = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-rpc-api = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3", features = ["client"] }
reth-rpc-eth-types = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-rpc-server-types = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-network = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3", features = ["serde"] }
reth-network-p2p = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-network-api = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-downloaders = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-tracing = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-tasks = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-payload-builder = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-payload-primitives = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-payload-validator = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-basic-payload-builder = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-static-file = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-static-file-types = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3", features = ["clap"] }
reth-trie = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3", features = ["metrics"] }
reth-node-api = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-node-optimism = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3", features = ["optimism"] }
reth-node-core = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-ethereum-payload-builder = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-db-common = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-node-ethereum = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-node-builder = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-node-events = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-consensus = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-optimism-primitives = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-engine-util = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-prune = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-stages-api = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-optimism-cli = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-ethereum-forks = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }
reth-trie-common = { git = "https://github.com/paradigmxyz/reth.git", tag = "v1.0.3" }

# revm
revm = { version = "12.1.0", features = [
    "std",
    "secp256k1",
    "blst",
], default-features = false }
revm-primitives = { version = "7.1.0", features = [
    "std",
], default-features = false }
revm-inspectors = "0.5"

# eth
alloy-chains = "0.1.18"
alloy-primitives = "0.7.2"
alloy-dyn-abi = "0.7.2"
alloy-sol-types = "0.7.2"
alloy-rlp = "0.3.4"
alloy-trie = { version = "0.4", default-features = false }
alloy-rpc-types = { version = "0.2", default-features = false, features = [
    "eth",
] }
alloy-rpc-types-anvil = { version = "0.2", default-features = false }
alloy-rpc-types-beacon = { version = "0.2", default-features = false }
alloy-rpc-types-admin = { version = "0.2", default-features = false }
alloy-rpc-types-txpool = { version = "0.2", default-features = false }
alloy-serde = { version = "0.2", default-features = false }
alloy-rpc-types-engine = { version = "0.2", default-features = false }
alloy-rpc-types-eth = { version = "0.2", default-features = false }
alloy-rpc-types-mev = { version = "0.2", default-features = false }
alloy-rpc-types-trace = { version = "0.2", default-features = false }
alloy-genesis = { version = "0.2", default-features = false }
alloy-node-bindings = { version = "0.2", default-features = false }
alloy-provider = { version = "0.2", default-features = false, features = [
    "reqwest",
] }
alloy-eips = { version = "0.2", default-features = false }
alloy-signer = { version = "0.2", default-features = false }
alloy-signer-local = { version = "0.2", default-features = false }
alloy-network = { version = "0.2", default-features = false }
alloy-consensus = { version = "0.2", default-features = false }
alloy-transport = { version = "0.2" }
alloy-transport-http = { version = "0.2", features = [
    "reqwest-rustls-tls",
], default-features = false }
alloy-transport-ws = { version = "0.2", default-features = false }
alloy-transport-ipc = { version = "0.2", default-features = false }
alloy-pubsub = { version = "0.2", default-features = false }
alloy-json-rpc = { version = "0.2", default-features = false }
alloy-rpc-client = { version = "0.2", default-features = false }

# crypto

# config
confy = "0.6"
toml = "0.8"


# misc-testing
arbitrary = "1.3"
assert_matches = "1.5.0"
tempfile = "3.8"
criterion = "0.5"
pprof = "0.13"
proptest = "1.4"
proptest-derive = "0.5"
serial_test = "3"
similar-asserts = "1.5.0"
test-fuzz = "5"
iai-callgrind = "0.11"


# p2p
discv5 = "0.6.0"

# tracing

# io

# metrics
metrics = "0.23.0"
metrics-exporter-prometheus = { version = "0.15.0", default-features = false }
metrics-util = "0.17.0"
metrics-process = "2.1.0"

# tokio
futures = "0.3"
futures-util = "0.3"
futures-core = "0.3"
tokio-stream = "0.1.11"
tokio = { version = "1.21", default-features = false }
tokio-util = { version = "0.7.4", features = ["codec"] }

# http
http = "1.0"
http-body = "1.0"
jsonwebtoken = "9"
proptest-arbitrary-interop = "0.1.0"

# crypto
secp256k1 = { version = "0.29", default-features = false, features = [
    "global-context",
    "recovery",
] }
enr = { version = "0.12.1", default-features = false }

# for eip-4844
c-kzg = "1.0.0"


# misc
auto_impl = "1"
aquamarine = "0.5"
bytes = "1.5"
bitflags = "2.4"
clap = "4"
const_format = { version = "0.2.32", features = ["rust_1_64"] }
dashmap = "5.5"
derive_more = "0.99.17"
fdlimit = "0.3.0"
eyre = "0.6"
generic-array = "0.14"
linked_hash_set = "0.1"
tracing = "0.1.0"
tracing-appender = "0.2"
thiserror = "1.0"
thiserror-no-std = { version = "2.0.2", default-features = false }
serde_json = "1.0.94"
serde = { version = "1.0", default-features = false }
serde_with = "3.3.0"
humantime = "2.1"
humantime-serde = "1.1"
rand = "0.8.5"
rustc-hash = {  version = "2.0", default-features = false }
schnellru = "0.2"
strum = {  version = "0.26", default-features = false }
rayon = "1.7"
itertools = "0.13"
parking_lot = "0.12"
modular-bitfield = "0.11.2"
once_cell = "1.17"
syn = "2.0"
nybbles = "0.2.1"
smallvec = "1"
dyn-clone = "1.0.17"
sha2 = { version = "0.10", default-features = false }
paste = "1.0"
url = "2.3"
backon = "0.4"
boyer-moore-magiclen = "0.2.16"
shellexpand = "3.0.0"
zstd = "0.13"

# Meant for testing - all optimizations, but with debug assertions and overflow checks.
[profile.hivetests]
inherits = "test"
opt-level = 3
lto = "thin"

[profile.release]
opt-level = 3
lto = "thin"
debug = "line-tables-only"
strip = true
panic = "unwind"
codegen-units = 16

# Use the `--profile profiling` flag to show symbols in release mode.
# e.g. `cargo build --profile profiling`
[profile.profiling]
inherits = "release"
debug = 2
strip = false

# Make sure debug symbols are in the bench profile
[profile.bench]
inherits = "profiling"

[profile.maxperf]
inherits = "release"
lto = "fat"
codegen-units = 1
